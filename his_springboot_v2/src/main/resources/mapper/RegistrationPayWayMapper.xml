<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hospital.mapper.RegistrationPayWayMapper">
  <resultMap id="BaseResultMap" type="com.hospital.model.sf.RegistrationPayWay">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="registration_no" jdbcType="INTEGER" property="registrationNo" />
    <result column="medical_record" jdbcType="CHAR" property="medicalRecord" />
    <result column="registration_pay_no" jdbcType="INTEGER" property="registrationPayNo" />
    <result column="registration_pay_name" jdbcType="VARCHAR" property="registrationPayName" />
    <result column="blank1" jdbcType="VARCHAR" property="blank1" />
    <result column="blank2" jdbcType="VARCHAR" property="blank2" />
    <result column="blank3" jdbcType="VARCHAR" property="blank3" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, registration_no, medical_record, registration_pay_no, registration_pay_name, 
    blank1, blank2, blank3
  </sql>
  <select id="selectByExample" parameterType="com.hospital.model.sf.RegistrationPayWayExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from registration_pay_way
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from registration_pay_way
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from registration_pay_way
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.hospital.model.sf.RegistrationPayWayExample">
    delete from registration_pay_way
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.hospital.model.sf.RegistrationPayWay">
    insert into registration_pay_way (id, registration_no, medical_record, 
      registration_pay_no, registration_pay_name, 
      blank1, blank2, blank3
      )
    values (#{id,jdbcType=INTEGER}, #{registrationNo,jdbcType=INTEGER}, #{medicalRecord,jdbcType=CHAR}, 
      #{registrationPayNo,jdbcType=INTEGER}, #{registrationPayName,jdbcType=VARCHAR}, 
      #{blank1,jdbcType=VARCHAR}, #{blank2,jdbcType=VARCHAR}, #{blank3,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hospital.model.sf.RegistrationPayWay">
    insert into registration_pay_way
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="registrationNo != null">
        registration_no,
      </if>
      <if test="medicalRecord != null">
        medical_record,
      </if>
      <if test="registrationPayNo != null">
        registration_pay_no,
      </if>
      <if test="registrationPayName != null">
        registration_pay_name,
      </if>
      <if test="blank1 != null">
        blank1,
      </if>
      <if test="blank2 != null">
        blank2,
      </if>
      <if test="blank3 != null">
        blank3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="registrationNo != null">
        #{registrationNo,jdbcType=INTEGER},
      </if>
      <if test="medicalRecord != null">
        #{medicalRecord,jdbcType=CHAR},
      </if>
      <if test="registrationPayNo != null">
        #{registrationPayNo,jdbcType=INTEGER},
      </if>
      <if test="registrationPayName != null">
        #{registrationPayName,jdbcType=VARCHAR},
      </if>
      <if test="blank1 != null">
        #{blank1,jdbcType=VARCHAR},
      </if>
      <if test="blank2 != null">
        #{blank2,jdbcType=VARCHAR},
      </if>
      <if test="blank3 != null">
        #{blank3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.hospital.model.sf.RegistrationPayWayExample" resultType="java.lang.Long">
    select count(*) from registration_pay_way
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update registration_pay_way
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.registrationNo != null">
        registration_no = #{record.registrationNo,jdbcType=INTEGER},
      </if>
      <if test="record.medicalRecord != null">
        medical_record = #{record.medicalRecord,jdbcType=CHAR},
      </if>
      <if test="record.registrationPayNo != null">
        registration_pay_no = #{record.registrationPayNo,jdbcType=INTEGER},
      </if>
      <if test="record.registrationPayName != null">
        registration_pay_name = #{record.registrationPayName,jdbcType=VARCHAR},
      </if>
      <if test="record.blank1 != null">
        blank1 = #{record.blank1,jdbcType=VARCHAR},
      </if>
      <if test="record.blank2 != null">
        blank2 = #{record.blank2,jdbcType=VARCHAR},
      </if>
      <if test="record.blank3 != null">
        blank3 = #{record.blank3,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update registration_pay_way
    set id = #{record.id,jdbcType=INTEGER},
      registration_no = #{record.registrationNo,jdbcType=INTEGER},
      medical_record = #{record.medicalRecord,jdbcType=CHAR},
      registration_pay_no = #{record.registrationPayNo,jdbcType=INTEGER},
      registration_pay_name = #{record.registrationPayName,jdbcType=VARCHAR},
      blank1 = #{record.blank1,jdbcType=VARCHAR},
      blank2 = #{record.blank2,jdbcType=VARCHAR},
      blank3 = #{record.blank3,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.hospital.model.sf.RegistrationPayWay">
    update registration_pay_way
    <set>
      <if test="registrationNo != null">
        registration_no = #{registrationNo,jdbcType=INTEGER},
      </if>
      <if test="medicalRecord != null">
        medical_record = #{medicalRecord,jdbcType=CHAR},
      </if>
      <if test="registrationPayNo != null">
        registration_pay_no = #{registrationPayNo,jdbcType=INTEGER},
      </if>
      <if test="registrationPayName != null">
        registration_pay_name = #{registrationPayName,jdbcType=VARCHAR},
      </if>
      <if test="blank1 != null">
        blank1 = #{blank1,jdbcType=VARCHAR},
      </if>
      <if test="blank2 != null">
        blank2 = #{blank2,jdbcType=VARCHAR},
      </if>
      <if test="blank3 != null">
        blank3 = #{blank3,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hospital.model.sf.RegistrationPayWay">
    update registration_pay_way
    set registration_no = #{registrationNo,jdbcType=INTEGER},
      medical_record = #{medicalRecord,jdbcType=CHAR},
      registration_pay_no = #{registrationPayNo,jdbcType=INTEGER},
      registration_pay_name = #{registrationPayName,jdbcType=VARCHAR},
      blank1 = #{blank1,jdbcType=VARCHAR},
      blank2 = #{blank2,jdbcType=VARCHAR},
      blank3 = #{blank3,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>